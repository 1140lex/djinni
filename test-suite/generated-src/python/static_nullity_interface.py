# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from interface_nullity.djinni

from djinni.support import MultiSet # default imported in all files
from djinni.exception import CPyException # default imported in all files
from djinni.pycffi_marshal import CPyPrimitive

from abc import ABCMeta, abstractmethod
from dummy_interface import DummyInterface
from dummy_interface import DummyInterfaceHelper
from future.utils import with_metaclass
from PyCFFIlib_cffi import ffi, lib

from djinni import exception # this forces run of __init__.py which gives cpp option to call back into py to create exception

class StaticNullityInterface(with_metaclass(ABCMeta)):
    @staticmethod
    def non_null_parameters(p1, p2):
        StaticNullityInterfaceCppProxy.non_null_parameters(p1, p2)
    @staticmethod
    def non_null_return(should_return_null):
        return StaticNullityInterfaceCppProxy.non_null_return(should_return_null)
    @staticmethod
    def nullable_parameters(p1, p2):
        StaticNullityInterfaceCppProxy.nullable_parameters(p1, p2)
    @staticmethod
    def nullable_return(should_return_null):
        return StaticNullityInterfaceCppProxy.nullable_return(should_return_null)

class StaticNullityInterfaceCppProxy(StaticNullityInterface):
    def __init__(self, proxy):
        self._is_cpp_proxy = True
        self._cpp_impl = proxy
    def __del__(self):
        if not lib:
            return
        lib.static_nullity_interface___wrapper_dec_ref(self._cpp_impl)

    @staticmethod
    def non_null_parameters(p1, p2):
        lib.cw__static_nullity_interface_non_null_parameters(DummyInterfaceHelper.fromPy(p1), DummyInterfaceHelper.fromPy(p2))
        CPyException.toPyCheckAndRaise(ffi.NULL)

    @staticmethod
    def non_null_return(should_return_null):
        _ret_c = lib.cw__static_nullity_interface_non_null_return(CPyPrimitive.fromPy(should_return_null))
        CPyException.toPyCheckAndRaise(_ret_c)
        _ret = DummyInterfaceHelper.toPy(_ret_c)
        assert _ret is not None
        return _ret

    @staticmethod
    def nullable_parameters(p1, p2):
        lib.cw__static_nullity_interface_nullable_parameters(DummyInterfaceHelper.fromPy(p1), DummyInterfaceHelper.fromPy(p2))
        CPyException.toPyCheckAndRaise(ffi.NULL)

    @staticmethod
    def nullable_return(should_return_null):
        _ret_c = lib.cw__static_nullity_interface_nullable_return(CPyPrimitive.fromPy(should_return_null))
        CPyException.toPyCheckAndRaise(_ret_c)
        _ret = DummyInterfaceHelper.toPy(_ret_c)
        return _ret

class StaticNullityInterfaceHelper:
    c_data_set = MultiSet()
    @staticmethod
    def toPy(obj):
        if obj == ffi.NULL:
            return None
        return StaticNullityInterfaceCppProxy(obj)

