# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from constants.djinni

from djinni.support import MultiSet # default imported in all files
from djinni.exception import CPyException # default imported in all files
from djinni.pycffi_marshal import CPyPrimitive

from abc import ABCMeta, abstractmethod
from future.utils import with_metaclass
from PyCFFIlib_cffi import ffi, lib

from djinni import exception # this forces run of __init__.py which gives cpp option to call back into py to create exception

class ConstantsInterface(with_metaclass(ABCMeta)):
    """
     Interface containing constants
    Constants
        BOOL_CONSTANT
        I8_CONSTANT
        I16_CONSTANT
        I32_CONSTANT: i32_constant has documentation.
        I64_CONSTANT: i64_constant has long documentation.
             (Second line of multi-line documentation.
               Indented third line of multi-line documentation.)
        F32_CONSTANT
        F64_CONSTANT
    """

    BOOL_CONSTANT = True
    I8_CONSTANT = 1
    I16_CONSTANT = 2
    I32_CONSTANT = 3
    I64_CONSTANT = 4
    F32_CONSTANT = 5.0
    F64_CONSTANT = 5.0

    @abstractmethod
    def dummy(self):
        raise NotImplementedError



class ConstantsInterfaceCppProxy(ConstantsInterface):
    def __init__(self, proxy):
        self._is_cpp_proxy = True
        self._cpp_impl = proxy
    def __del__(self):
        if not lib:
            return
        lib.constants_interface___wrapper_dec_ref(self._cpp_impl)

    def dummy(self):
        lib.cw__constants_interface_dummy(self._cpp_impl)
        CPyException.toPyCheckAndRaise(ffi.NULL)

class ConstantsInterfaceHelper:
    c_data_set = MultiSet()
    @staticmethod
    def toPy(obj):
        if obj == ffi.NULL:
            return None
        return ConstantsInterfaceCppProxy(obj)

