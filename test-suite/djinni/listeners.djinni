first_listener = interface +o +p {
    first();
}

second_listener = interface +o +p {
    second();
}

# Tester for the ability to call two interfaces which might be
# implemented on the same object.  That's not relevant in all
# languages, due to the details of multiple inheritance and object
# comparison.
listener_caller = interface +c {
    static init(first_l: first_listener, second_l: second_listener): listener_caller;
    callFirst();
    callSecond();
}

objc_only_listener = interface +o {}
java_only_listener = interface +j {}
py_only_listener = interface +p {}

# Generating and compiling this makes sure other languages don't break
# on references to interfaces they don't need.
uses_single_language_listeners = interface +o +j +p +c {
  callForObjC(l: objc_only_listener);
  callForJava(l: java_only_listener);
  callForPy(l: py_only_listener);
}
